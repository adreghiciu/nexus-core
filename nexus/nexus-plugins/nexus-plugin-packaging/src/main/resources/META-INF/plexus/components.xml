<component-set>
  <components>
    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>nexus-plugin</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <lifecycles>
          <lifecycle>
            <id>default</id>
            <!-- START SNIPPET: nexus-plugin-lifecycle -->
            <phases>
              <!-- Nexus-specific steps: 
               |
               |     1. inject the nexus-plugin ArtifactHandler into the project's artifact instance
               |     # 2. verify that all nexus dependencies in this project have their scope set to 'provided'
               |
               |  NOTE: Banning non-provided nexus dependencies didn't work, since marking nexus
               |        dependencies as 'provided' scope cuts off transitive dependency resolution
               |        for those deps, even for the project that declares them. 
               -->
              <initialize>
                org.sonatype.nexus:nexus-buildhelper-maven-plugin:${project.version}:inject-artifact-handler
              </initialize>
              <!-- initialize>
                org.sonatype.nexus:nexus-buildhelper-maven-plugin:${project.version}:inject-artifact-handler,
                org.sonatype.nexus:nexus-buildhelper-maven-plugin:${project.version}:check-nexus-dependencies
              </initialize -->
              
              <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
              <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
              
              <!-- Nexus-specific step: generate the Nexus plugin descriptor. -->
              <process-classes>org.sonatype.nexus:nexuspd-maven-plugin:${project.version}:generate-metadata</process-classes>
              
              <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
              <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
              <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>

              <!-- Nexus-specific step inside: create a bundle for dropping into an existing Nexus instance -->
              <package>
                org.apache.maven.plugins:maven-jar-plugin:jar,
                org.sonatype.nexus:nexus-bundle-maven-plugin:${project.version}:create-bundle
              </package>
              
              <install>org.apache.maven.plugins:maven-install-plugin:install</install>
              <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
            </phases>
            <!-- END SNIPPET: nexus-plugin-lifecycle -->
          </lifecycle>
        </lifecycles>
      </configuration>
    </component>
    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>nexus-plugin</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>nexus-plugin</type>
        <extension>jar</extension>
        <language>java</language>
        <addedToClasspath>true</addedToClasspath>
      </configuration>
    </component>
  </components>
</component-set>